package com.zaneray.coursetracking.roster.xml;

import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import org.jdom2.Document;
import org.jdom2.output.XMLOutputter;
import org.junit.Test;

import com.zaneray.coursetracking.course.Course;
import com.zaneray.coursetracking.roster.Roster;
import com.zaneray.coursetracking.student.Student;

public class RosterXMLWriterTest {

	private Student studentOne = new Student(-1, "First Name", "Last Name", "1999-01-01");
	private Student studentTwo = new Student(-2, "1st Name", "2nd Name", "1999-01-02");
	private Student studentThree = new Student(-3, "First", "Last", "1999-01-03");
	private Student studentFour = new Student(-4, "Name First", "Name Last", "1999-01-04");
	private Student studentFive = new Student(-5, "A", "B", "1999-01-05");
	
	private Course courseOne = new Course(-1, "Course One");
	private Course courseTwo = new Course(-1, "Course Two");
	
	private String expectedOutput =
			"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\u000d""+
			"<classes><class><name>Course One</name><students /></class></classes>";
	
	
//	"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
//	+ "<classes>"
//		+ "<class>"
//			+ "<name>Course One</name>"
//			+ "<students>"
//				+ "<student>First Name Last Name</student>"
//				+ "<student>1st Name 2nd Name</student>"
//				+ "<student>A B</student>"
//				+ "</students>"
//		+ "</class>"
//		+ "<class>"
//			+ "<name>Course Two</name>"
//			+ "<students>"
//				+ "<student>First Last</student>"
//				+ "<student>Name First Name Last</student>"
//				+ "<student>A B</student>"
//			+ "</students>"
//		+ "</class>"
//	+ "</classes>";		
	
	@Test
	public void test() throws IOException {
//		List<Roster> rosters = Arrays.asList(buildRosterOne(), buildRosterTwo());
		List<Roster> rosters = Arrays.asList(buildRosterOne());
		
		Document document = new RosterXMLWriter().write(rosters);
		
		ByteArrayOutputStream outputStream = writeDocument(document);	  
		
		
		String output = outputStream.toString();
		System.out.println(output.length());
		System.out.println(expectedOutput.length());
		System.out.println( "**" + Character.UnicodeBlock.of(output.charAt(38)));
		System.out.println(Integer.toHexString(output.charAt(38) | 0x10000).substring(1));
		for(int i = 0; i < output.length(); i++) {
			System.out.print(i + " " + output.charAt(i) + "--" + expectedOutput.charAt(i) + " " + (output.charAt(i) == expectedOutput.charAt(i)));
			System.out.println();
		}
		
		System.out.println( "**" + Character.UnicodeBlock.of(output.charAt(38)));
		
		
		assertEquals(expectedOutput, outputStream.toString());
	}

//	private Roster buildRosterTwo() {
//		List<Student> courseTwoStudents = Arrays.asList(studentThree, studentFour, studentFive);
//		Roster rosterTwo = new Roster(courseTwo, courseTwoStudents);
//		return rosterTwo;
//	}

	private Roster buildRosterOne() {
//		List<Student> courseOneStudents = Arrays.asList(studentOne, studentTwo, studentFive);
		List<Student> courseOneStudents = Arrays.asList();
		Roster rosterOne = new Roster(courseOne, courseOneStudents);
		return rosterOne;
	}

	private ByteArrayOutputStream writeDocument(Document document) throws IOException {
		ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
		XMLOutputter outputter = new XMLOutputter();
	    outputter.output(document, outputStream);
		return outputStream;
	}

}
