package com.zaneray.coursetracking.course.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Enumeration;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.zaneray.coursetracking.course.Course;
import com.zaneray.coursetracking.course.CourseDAO;


public class CourseController extends HttpServlet {

	private static final long serialVersionUID = 1L;


	public CourseController() {
		super();
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		CourseDAO courseDao = new CourseDAO();
		List<Course> courses = courseDao.retreiveAll();

		request.setAttribute("courses", courses);
		RequestDispatcher rd = getServletContext().getRequestDispatcher("/courseList.jsp");
		rd.forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String action = request.getParameter("action");
		
		
		String dispatchTo = "/courseList.jsp";
		if ("create".equals(action)) {
			CourseDAO courseDao = new CourseDAO();
			String courseName = request.getParameter("courseName");
			if(!courseName.isEmpty()) courseDao.create(courseName);
			dispatchToPopulatedCourseList(request, response);
		}
		else if ("delete".equals(action)) {
			CourseDAO courseDao = new CourseDAO();
			Integer courseId = new Integer( request.getParameter("courseId") );
			courseDao.delete(courseId);
			dispatchToPopulatedCourseList(request, response);
		}
		else if ("forward".equals(action)) {
			dispatchTo = request.getParameter("dispatchTo");
			Integer courseId = new Integer(request.getParameter("courseId"));
			String courseName = request.getParameter("courseName");
			
			request.setAttribute("existingCourse", new Course(courseId, courseName));
			
			RequestDispatcher rd = getServletContext().getRequestDispatcher(dispatchTo);
			rd.forward(request, response);
		}
		else if ("update".equals(action)) {
			CourseDAO courseDao = new CourseDAO();
			Integer courseId = new Integer(request.getParameter("courseId"));
			String newCourseName = request.getParameter("newCourseName");
			courseDao.update(new Course(courseId, newCourseName));
			dispatchToPopulatedCourseList(request, response);
		}
		
	}

	private void dispatchToPopulatedCourseList(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		CourseDAO courseDao = new CourseDAO();
		List<Course> courses = courseDao.retreiveAll();
		request.setAttribute("courses", courses);
		RequestDispatcher rd = getServletContext().getRequestDispatcher("/courseList.jsp");
		rd.forward(request, response);
	}
}
